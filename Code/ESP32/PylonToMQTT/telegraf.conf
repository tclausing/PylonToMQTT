[global_tags]
[agent]
  interval = "4s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "4s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = true
  # debug = true

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  organization = "org"
  bucket = "pylontomqtt"
  timeout = "5s"
  token = "..."

# [[outputs.file]]
#   # files = ["stdout"]
#   files = ["/tmp/telegraf.out"]

###############################################################################
#                            SERVICE INPUT PLUGINS                            #
###############################################################################

[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  qos = 0
  topics = [
    "PylonToMQTT/jakiper/stat/readings/+",
  ]

  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  # data_format = "json"
  # json_string_fields = ["*Status*"]
  topic_tag = ""

  data_format = "xpath_json"

  [[inputs.mqtt_consumer.xpath]]
    metric_name = "'pack'"
    field_selection = "child::*[not(*)][not(self::ADR)]"
    field_value = "number(.)"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"

  [[inputs.mqtt_consumer.xpath]]
    metric_name = "'pack'"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"
    [inputs.mqtt_consumer.xpath.fields]
      PackVoltage = "number(PackVoltage/Reading)"
      PackCurrent = "number(PackCurrent/Reading)"

  [[inputs.mqtt_consumer.xpath]]
    metric_selection = "//Cells/*"
    metric_name = "'cell'"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"
      cell = "Num"
    [inputs.mqtt_consumer.xpath.fields]
      CellVoltage = "number(Reading)"

  [[inputs.mqtt_consumer.xpath]]
    metric_selection = "//Temps/*"
    metric_name = "'temp'"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"
      sensor = "Name"
    [inputs.mqtt_consumer.xpath.fields]
      Temp = "number(Reading)"


[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  qos = 0
  topics = [
    "PylonToMQTT/jakiper/stat/alarms/+"
  ]
  topic_tag = ""

  data_format = "xpath_json"

  [[inputs.mqtt_consumer.xpath]]
    metric_name = "'pack'"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"
    [inputs.mqtt_consumer.xpath.fields]
      PackVoltageState = "PackVoltage/State"
      PackCurrentState = "PackCurrent/State"

  [[inputs.mqtt_consumer.xpath]]
    metric_selection = "//Cells/*"
    metric_name = "'cell'"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"
      cell = "Num"
    [inputs.mqtt_consumer.xpath.fields]
      CellState = "State"

  [[inputs.mqtt_consumer.xpath]]
    metric_selection = "//Temps/*"
    metric_name = "'temp'"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"
      sensor = "Name"
    [inputs.mqtt_consumer.xpath.fields]
      TempState = "State"

  [[inputs.mqtt_consumer.xpath]]
    metric_name = "'ProtectStatus'"
    field_selection = "//Protect_Status/*"
    field_value = "boolean(//Protect_Status/.)"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"

  [[inputs.mqtt_consumer.xpath]]
    metric_name = "'SystemStatus'"
    field_selection = "//System_Status/*"
    field_value = "boolean(//System_Status/.)"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"

  [[inputs.mqtt_consumer.xpath]]
    metric_name = "'FaultStatus'"
    field_selection = "//Fault_Status/*"
    field_value = "boolean(//Fault_Status/.)"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"

  [[inputs.mqtt_consumer.xpath]]
    metric_name = "'AlarmStatus'"
    field_selection = "//Alarm_Status/*"
    field_value = "boolean(//Alarm_Status/.)"
    [inputs.mqtt_consumer.xpath.tags]
      pack = "/ADR"
